#Использовать logos
#Использовать fs
Перем Лог;

Процедура ПередСборкой(Знач РабочийКаталог) Экспорт

	ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "oscript_modules"));

	Лог.Информация("Установка локальных зависимостей библиотек");
	КомандаOpm = Новый Команда;

	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("install -l");	

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("run install-opm");	

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Лог.Информация("Настройка локальных библиотек");
	
	ПутьКФайлуЗагрузчику = ОбъединитьПути(РабочийКаталог, "oscript_modules", "package-loader.os");
	ШаблонныйФайлЗагрузчик = ОбъединитьПути(РабочийКаталог, "templates", "package-loader.os");
	ФайлЗагрузчик = Новый Файл(ПутьКФайлуЗагрузчику);
	Если Не ФайлЗагрузчик.Существует() Тогда
		КопироватьФайл(ШаблонныйФайлЗагрузчик, ПутьКФайлуЗагрузчику);
		Лог.Информация("Добавлен файл загрузки локальных библиотек");
	КонецЕсли;
	
	ПутьКФайлуНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "src", "cmd", "oscript.cfg");
	ШаблонныйФайлНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "templates", "oscript.cfg");
	ФайлНастройкиСкрипта= Новый Файл(ПутьКФайлуНастройкиСкрипта);
	Если Не ФайлНастройкиСкрипта.Существует() Тогда
		КопироватьФайл(ШаблонныйФайлНастройкиСкрипта, ПутьКФайлуНастройкиСкрипта);
		Лог.Информация("Добавлен файл настройки запуска");
	КонецЕсли;

	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("run get-plugins");	

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Лог.Информация("Настройка локальных библиотек");

КонецПроцедуры

Процедура ПриСборке(Знач РабочийКаталог, Знач АрхивПакета) Экспорт

КонецПроцедуры

Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт

	ПутьКФайлуНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "src", "cmd", "oscript.cfg");
	ФайлНастройкиСкрипта= Новый Файл(ПутьКФайлуНастройкиСкрипта);
	Если  ФайлНастройкиСкрипта.Существует() Тогда
		УдалитьФайлы(ПутьКФайлуНастройкиСкрипта);
	КонецЕсли;

	ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "oscript_modules"));

КонецПроцедуры

Лог = Логирование.ПолучитьЛог(ПараметрыСистемыOpm.ИмяЛогаСистемы());

Описание.Имя("gitsync3")
		.Версия("0.9.1-beta")
		.ВерсияСреды("1.0.20")
		.ВключитьФайл("src")
		.ВключитьФайл("embedded_plugins")
		.ВключитьФайл("oscript_modules")
		.ВключитьФайл("docs")
		.ВключитьФайл("readme.md")
		.ОпределяетКласс("МенеджерСинхронизации", "src/core/Классы/МенеджерСинхронизации.os")
		.ОпределяетКласс("УправлениеПлагинами", "src/core/Классы/УправлениеПлагинами.os")
		.ИсполняемыйФайл("src/cmd/gitsync3.os");